@model BugTracker.Models.Ticket

@{
    ViewBag.Title = "Details";
}


<div class="container">
    <div class="row">
        <div class="col-md-8">
            <h3>Ticket Details</h3>
        </div>
    </div>
    <div class="row">
        <div class="col-md-1">
            <strong>Title </strong>
        </div>
        <div class="col-md-7">
            @Html.DisplayFor(model => model.title)
        </div>
    </div>
    <div class="row">
        <div class="col-md-1">
            <strong>Description </strong>
        </div>
        <div class="col-md-7">
            @Html.DisplayFor(model => model.description)
        </div>
    </div>
    <div class="row">
        <div class="col-md-1">
            <strong>Project </strong>
        </div>
        <div class="col-md-7">
            @Html.DisplayFor(model => model.Project.Name)
        </div>
    </div>
    <div class="row">
        <div class="col-md-1">
            <strong>Type</strong>
        </div>
        <div class="col-md-3">
            @Html.DisplayFor(model => model.TicketType.Name)
        </div>
        <div class="col-md-1">
            <strong>Status</strong>
        </div>
        <div class="col-md-3">
            @Html.DisplayFor(model => model.TicketStatus.Name)
        </div>
    </div>
    <div class="row">
        <div class="col-md-1">
            <strong>Priority</strong>
        </div>
        <div class="col-md-7">
            @Html.DisplayFor(model => model.TicketPriority.Name)
        </div>
    </div>
    <div class="row">
        <div class="col-md-1">
            <strong>Owner </strong>
        </div>
        <div class="col-md-3">
            @Html.DisplayFor(model => model.OwnerUser.FirstName) @Html.DisplayFor(model => model.OwnerUser.LastName)
        </div>
        <div class="col-md-1">
            <strong>Developer </strong>
        </div>
        <div class="col-md-3">
            @Html.DisplayFor(model => model.AssignedToUser.FirstName) @Html.DisplayFor(model => model.AssignedToUser.LastName)
        </div>
    </div>
    <div class="row">
        <div class="col-md-1">
            <strong>@Html.DisplayNameFor(model => model.Created)</strong>
        </div>
        <div class="col-md-3">
            @Html.DisplayFor(model => model.Created)
        </div>
        <div class="col-md-1">
            <strong>@Html.DisplayNameFor(model => model.Updated)</strong>
        </div>
        <div class="col-md-3">
            @Html.DisplayFor(model => model.Updated)
        </div>
    </div>
    <div class="row">
        <div class="col-md-8">
            <p>
                @Html.ActionLink("Edit", "Edit", new { id = Model.Id }) |
                @Html.ActionLink("Back to List", "Index")
            </p>
        </div>
    </div>

    @*Begin Comments section*@
    <div class="row">
        <div class="col-md-6">
            <h3>Comments</h3>
            <div class="row">
                @foreach (var comment in Model.TicketComments.Reverse())
                {
                    <p>
                        @if (!String.IsNullOrWhiteSpace(comment.UserId))
                        {
                            if (!String.IsNullOrWhiteSpace(comment.User.LastName))
                            {
                                <h5>@comment.User.LastName wrote: </h5>
                            }
                        }
                        <h5>@comment.Comment</h5>
                        <br />
                        <h6><em>@comment.Created</em></h6>
                        @if (User.IsInRole("Admin"))
                        {
                            <a class="btn btn-link" href="@Url.Action("Edit", "TicketComments", new { id = comment.Id})" role="button">Edit</a>
                            <a class="btn btn-link" href="@Url.Action("Delete", "TicketComments", new { id = comment.Id})" role="button">Delete</a>
                        }
                        @if (User.IsInRole("Submitter") || User.IsInRole("Developer"))
                        {
                            if (comment.UserId == ViewBag.UserId)
                            {
                                <a class="btn btn-link" href="@Url.Action("Edit", "TicketComments", new { id = comment.Id})" role="button">Edit</a>
                                <a class="btn btn-link" href="@Url.Action("Delete", "TicketComments", new { id = comment.Id})" role="button">Delete</a>
                            }
                        }
                        @if (User.IsInRole("Project Manager"))
                        {
                            if (Model.Project.Users.Contains(ViewBag.UserObject))
                            {
                                <a class="btn btn-link" href="@Url.Action("Edit", "TicketComments", new { id = comment.Id})" role="button">Edit</a>
                                <a class="btn btn-link" href="@Url.Action("Delete", "TicketComments", new { id = comment.Id})" role="button">Delete</a>
                            }
                        }

                    </p>
                    <hr class="small" />
                }

                @if (User.Identity.IsAuthenticated)
            {
                using (Html.BeginForm("Create", "TicketComments", FormMethod.Post))
                {
                        @Html.AntiForgeryToken();
                        <input type="hidden" name="TicketId" value="@Model.Id" />
                        <div class="form-horizontal">
                            <div class="form-group">
                                <textarea class="form-control" id="comment" name="Comment" rows="6" placeholder="Enter a comment."></textarea>
                            </div>
                            <div class="form-group">
                                <input type="submit" value="Submit" class="btn btn-default" />
                            </div>
                        </div>
                    }
                }
                else
                {
                    <a href="@Url.Action("Login", "Account")" class="btn brn-primary" role="button">Please Login to Comment</a>
                }

            </div>
        </div>
        @*Begin Attachments section*@
        <div class="col-md-6">
            <h3>Attachments</h3>
            @foreach (var attachment in Model.TicketAttachments.Reverse())
            {
                <p>
                    @attachment.User.LastName added:
                    <br />
                    <a href="@Href(attachment.FileUrl)">@attachment.Description</a>
                   
                </p>
                <p>
                    <h6><em>@attachment.Created</em></h6>
                    <br />
                </p>
                <hr />
            }

            <a class="btn btn-link" href="@Url.Action("Create", "TicketAttachments", new {id = Model.Id})" role="button">Add Attachment</a>
        </div>
    </div>
</div>
